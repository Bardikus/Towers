<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MAIN CREATE EVENT
randomize();
depth        = -10
idd          = 0

//-----GAME STATE LOGIC-------------------
gameTimer    = 60 * 30
gameOver     = false
attackersWon = false
defendersWon = false
//----------------------------------------


//----SPAWN TIME PRESSURE BAR-------------
spawnTimeValueInitial = 3 * 60
spawnTimeValueCurrent = spawnTimeValueInitial
//----------------------------------------


//------CREATE CURSORS------------------------------------------

//currentPos =
//player 1 attacker cursor, device input id = 0
idd = instance_create(200, 800, obj_cursor_attacker)
idd.device_number = 0
idd.sprite        = spr_cursor_attacker
obj_gamepad_controller.player[idd.device_number] = idd

//player 2 attacker cursor, device input id = 1
idd = instance_create(200, 800, obj_cursor_defender)
idd.device_number = 1
idd.sprite        = spr_cursor_defender
obj_gamepad_controller.player[idd.device_number] = idd
//--------------------------------------------------------------


//HUD BUTTONS---------------------------------------------------
//Player 1 UNITS
idd = instance_create(x + 10, y + 350, obj_button_build)
with (idd)
{
    spr_name    = spr_unit_1f
    spr_button  = spr_xbox_y
    obj_Created = obj_unit_1
    unit_name   = "BRUISER"
    unit_cost   = 3
}
obj_cursor_attacker.arrayButtons[0] = idd

idd = instance_create(x + 10, y + 550, obj_button_build)
with (idd)
{
    spr_name    = spr_unit_2f
    spr_button  = spr_xbox_x
    obj_Created = obj_unit_2
    unit_name   = "RANGER"
    unit_cost   = 3
}
obj_cursor_attacker.arrayButtons[1] = idd

idd = instance_create(x + 10, y + 750, obj_button_build)
with (idd)
{
    spr_name    = spr_unit_3f
    spr_button  = spr_xbox_a
    obj_Created = obj_unit_3
    unit_name   = "PATCHER"
    unit_cost   = 10
}
obj_cursor_attacker.arrayButtons[2] = idd

//Player 2 TOWERS
idd = instance_create(x + 1450, y + 350, obj_button_build)
with (idd)
{
    spr_name     = spr_tower_01_archer
    spr_button   = spr_xbox_y
    obj_Created  = obj_tower_1
    unit_name    = "ARCHER TOWER"
    unit_cost    = 7
}
obj_cursor_defender.arrayButtons[0] = idd

idd = instance_create(x + 1450, y + 550, obj_button_build)
with (idd)
{
    spr_name     = spr_tower_02_sword
    spr_button   = spr_xbox_x
    obj_Created  = obj_tower_2
    unit_name    = "amBUSHer"
    unit_cost    = 7
}
obj_cursor_defender.arrayButtons[1] = idd

idd = instance_create(x + 1450, y + 750, obj_button_build)
with (idd)
{
    spr_name     = spr_tower_03_bell
    spr_button   = spr_xbox_a
    obj_Created  = obj_tower_3
    unit_name    = "HAMMER BELL"
    unit_cost    = 10
}
obj_cursor_defender.arrayButtons[2] = idd
//------------------------------------------------------------------
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///PLAYERS, UNITS &amp; TOWERS STATS

gold_player1 = 100
gold_player2 = 150

player2_HP   = 3000

projectile_speed_unit  = 5
projectile_speed_tower = 10

costArray[] = 0

//units
costArray[0] = 3
costArray[1] = 5
costArray[2] = 10

//towers
costArray[3] = 1
costArray[4] = 5
costArray[5] = 16
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//TIME DEPLETE
gameTimer -= 1

//Spawn Time Pressure----------------
if (spawnTimeValueCurrent &gt; 0)
{
    spawnTimeValueCurrent -= 1
}

if (spawnTimeValueCurrent == 0)
{
    gold_player2 += 1/60
}
//------------------------------------

//CHECK FOR WIN CONDITIONS
/*
if (gameTimer &lt;= 0 &amp;&amp; baseHP &gt; 1)
{
   defendersWon = true
}

if (baseHP &lt;= 0 &amp;&amp; defendersWon == false)
{
   attackersWon = true
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw player icons backgrounds
draw_sprite(spr_player_icon_bck, 0, x, y)
draw_sprite(spr_player_icon_bck, 0, x + 1440, y)

//Draw AVATARS
draw_sprite(spr_player_1, 0, x + 80, y + 70)
draw_sprite(spr_player_2, 0, x + 1520, y + 70)

//Draw player roles
draw_set_color(c_black)
draw_text(x + 50,   y + 130, "PLAYER 1")
draw_text(x + 1480, y + 130, "PLAYER 2")

//Draw GOLD
draw_set_color(c_white)
    //p1
    draw_sprite(spr_gold, 0, x + 50, y + 215)
    draw_text(x + 100, y + 205, ceil(gold_player1))
    //p2
    draw_sprite(spr_gold, 0, x + 1475, y + 215)
    draw_text(x + 1520, y + 205, ceil(gold_player2))

//Draw HP player 2
draw_set_color(c_white)
draw_sprite(spr_heart, 0, x + 1460, y + 265)
draw_text(x + 1520, y + 270, string(player2_HP))

//DRAW time pressure bar
draw_set_color(c_black)
draw_sprite_ext(spr_bar_bck, 0,  x + 20, y + 270, image_xscale, image_yscale, 0, c_white, 1)
draw_sprite_ext(spr_bar_value, 0,  x + 20, y + 270, image_xscale * spawnTimeValueCurrent/spawnTimeValueInitial, image_yscale, 0, c_white, 1)
draw_text(x + 20, y + 270, ceil(spawnTimeValueCurrent/60))

//DRAW TIME
draw_set_color(c_black)
draw_text(x, y - 50, "TIME: " + string(gameTimer/60))


//DEBUG DRAW
draw_text(x + 250, y + 250, string(obj_cursor.zoneToSpawnIn))

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///NORMAL DRAW
draw_set_colour(c_white)
depth = 10
draw_set_alpha(0.3)

//spawn zone 01 paths
draw_path(path_01, x, y, true);
draw_path(path_02, x, y, true);
draw_path(path_03, x, y, true);
//spawn zone 02 paths
draw_path(path_04, x, y, true);
draw_path(path_05, x, y, true);
draw_path(path_06, x, y, true);

draw_set_alpha(1)

//DEBUG DRAW
/*
draw_set_color(c_white)
draw_text( 900, 500, "DW:" + string(defendersWon))
draw_text( 900, 600, "AW:" + string(attackersWon))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
